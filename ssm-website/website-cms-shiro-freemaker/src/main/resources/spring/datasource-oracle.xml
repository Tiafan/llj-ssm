<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx.xsd
	">
	<!-- 阿里 druid数据库连接池 -->
	<bean id="baseDataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="${druid.initialSize}" />
		<property name="maxActive" value="${druid.maxActive}" />
		<property name="minIdle" value="${druid.minIdle}" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${druid.maxWait}" />

		<!-- 用来检测连接是否有效的sql,要求是一个查询语句 -->
		<property name="validationQuery" value="SELECT 'x' from dual" />
		
		<!-- 申请连接的时候检测，如果空闲时间大于 -->
		<!-- 建议配置为true,不影响性能,并且保证安全性 -->
		<property name="testWhileIdle" value="true" />
		
		<!-- 申请连接时执行validationQuery检测连接是否有效,做了这个配置会降低性能 -->
		<property name="testOnBorrow" value="false" />
		
		<!-- 归还连接时执行validationQuery检测连接是否有效,做了这个配置会降低性能 -->
		<property name="testOnReturn" value="false" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="600000" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<!-- 超过时间限制是否回收 --> 
		<property name="removeAbandoned" value="true" />
		
		<!-- 超时时间；单位为秒。180秒=3分钟 --> 
		<property name="removeAbandonedTimeout" value="1800" />
		
		<!-- 关闭abanded连接时输出错误日志 --> 
		<property name="logAbandoned" value="false" />

		<!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->
		<property name="filters" value="mergeStat" />
	</bean>
	
	<bean id="dataSource"  parent="baseDataSource"  init-method="init">
	<property name="url" value="${jdbc.druid.url}" />
		<property name="username" value="${jdbc.druid.username}" />
		<property name="password" value="${jdbc.druid.password}" />
		<property name="driverClassName" value="${driverClassName}" />
	</bean>

	<!--配置Spring JdbcTemplate -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!--事物配置  -->
	<bean name="wTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<tx:advice id="wTxAdvice" transaction-manager="wTransactionManager">
	<tx:attributes>
			<tx:method name="create*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="add*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="update*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="save*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="publish*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="commit*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="generate*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="favorite*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="extract*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="set*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="update*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="modify*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="del*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="remove*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="cancel*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="do*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="login*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="register*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="bind*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="submit*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="upload*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="send*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="check*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="confirm*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="change*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="audit*" propagation="REQUIRED" rollback-for="Exception" />
            <tx:method name="join*" propagation="REQUIRED" rollback-for="Exception" />
            <tx:method name="syncUserInfo*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>
	
	<!-- 事物处理 -->
	<aop:config>
		<aop:pointcut id="txPointcut" expression="execution(* com.llj.web.service..*(..))" />
		<aop:advisor pointcut-ref="txPointcut" advice-ref="wTxAdvice" order="1" />
	</aop:config>
	
	<!-- 配置druid监控spring jdbc -->
	<bean id="druid-stat-interceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor">

	</bean>
	<bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut" scope="prototype">
		<property name="patterns">
			<list>
				<value>com.llj.web.service.*.impl.*</value>
			</list>
		</property>
	</bean>

	<aop:config>
		<aop:advisor advice-ref="druid-stat-interceptor" pointcut-ref="druid-stat-pointcut" />
	</aop:config>
	
    <aop:config proxy-target-class="true"/>

</beans>
